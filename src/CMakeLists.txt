# we use auxiliary objects for each code language to avoid compiler option mingling

# -- c library
add_library(forestclaw_c OBJECT
  forestclaw.c
  fclaw_convenience.c
  fclaw_base.c
  fclaw_options.c
  fclaw_filesystem.cpp
  fclaw_gauges.c
  fclaw_package.c
  fclaw_packing.c
  fclaw_pointer_map.c
  fclaw_math.c
  fclaw_timer.c
  fclaw_mpi.c
  fclaw_block.c
  fclaw_global.c
  fclaw_forestclaw.c
  fclaw_vtable.c
  fclaw_map.c
  fclaw_map_query.c
  fclaw_map_brick.c
  fclaw_exchange.c
  fclaw_advance.c
  fclaw_elliptic_solver.c
  fclaw_physical_bc.c
  fclaw_ghost_fill.c
  fclaw_output.c
  fclaw_run.c
  fclaw_diagnostics.c
  fclaw_rays.c
  fclaw_update_single_step.c
  fclaw_domain.c
  fclaw_regrid.c
  fclaw_patch.c
  fclaw_partition.c
  fclaw_timeinterp.c
  fclaw_initialize.c
  fclaw_finalize.c
  fclaw_time_sync.c
  fclaw_corner_neighbors.c
  fclaw_edge_neighbors.c
  fclaw_face_neighbors.c
  fclaw_farraybox.cpp
  fclaw2d_convenience.c
  fclaw2d_output_tikz.c
  fclaw2d_file.c
  fclaw2d_wrap.c
  forestclaw2d.c
  forestclaw3d.c
  fclaw3d_convenience.c
  fclaw3d_file.c
  fclaw3d_wrap.c
  fp_exception_glibc_extension.c
  mappings/fclaw_map_nomap.c
  mappings/fclaw_map_nomap_brick.c
)
target_include_directories(forestclaw_c PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_BINARY_DIR}/include patches/clawpatch)
target_link_libraries(forestclaw_c PRIVATE P4EST::P4EST SC::SC
$<$<BOOL:${FCLAW_ENABLE_MPI}>:MPI::MPI_C>
)

# -- fortran library
add_library(forestclaw_f OBJECT
  mappings/context.f
  mappings/scale_rot_map.f
  mappings/map_query.f
  mappings/cart/mapc2m_cart.f
  mappings/bilinear/mapc2m_bilinear.f
  mappings/annulus/mapc2m_annulus.f
  mappings/identity/mapc2m_identity.f
  mappings/pillowdisk/mapc2m_pillowdisk.f
  mappings/squareddisk/mapc2m_squareddisk.f
  mappings/pillowdisk5/mapc2m_pillowdisk5.f
  mappings/cubedsphere/mapc2m_cubedsphere.f
  mappings/pillowsphere/mapc2m_pillowsphere.f
  mappings/fivepatch/mapc2m_fivepatch.f
  mappings/torus/mapc2m_torus.f
  mappings/torus/mapc2m_twisted_torus.f
  mappings/latlong/mapc2m_latlong.f
  fortran_source2d/fclaw_dopri5.f
  fortran_source2d/cellave2.f
  fortran_source2d/fdisc.f
  fortran_source2d/philim.f
  fortran_source2d/cellave3.f
)

# -- put together in final library

add_library(forestclaw $<TARGET_OBJECTS:forestclaw_f> $<TARGET_OBJECTS:forestclaw_c>)
set_target_properties(forestclaw PROPERTIES EXPORT_NAME FORESTCLAW)

target_link_libraries(forestclaw
PUBLIC
P4EST::P4EST SC::SC "$<$<BOOL:${FCLAW_ENABLE_MPI}>:MPI::MPI_C>"
INTERFACE
"$<$<BOOL:${FCLAW_ENABLE_MPI}>:MPI::MPI_CXX>"
)

target_include_directories(forestclaw
  INTERFACE
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/src>
  $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
  $<INSTALL_INTERFACE:include>)

# imported target, for use from parent project
add_library(FORESTCLAW::FORESTCLAW INTERFACE IMPORTED GLOBAL)
target_link_libraries(FORESTCLAW::FORESTCLAW INTERFACE forestclaw)

install(FILES
  forestclaw.h
  fclaw_convenience.h
  fclaw_base.h
	fclaw_timer.h
	fclaw_package.h
  fclaw_packing.h
	fclaw_pointer_map.h
	fclaw_filesystem.h
	fclaw_options.h
	fclaw_gauges.h
	fclaw_mpi.h
	fclaw_math.h
  fclaw_wrap.h
  fclaw_include_all.h
	fclaw_advance.h
	fclaw_elliptic_solver.h
	fclaw_farraybox.hpp
	fclaw_global.h
	fclaw_forestclaw.h
	fclaw_domain.h
	fclaw_block.h
	fclaw_patch.h
	fclaw_vtable.h
	fclaw_output.h
	fclaw_time_sync.h
	fclaw_update_single_step.h
	fclaw_physical_bc.h
	fclaw_rays.h
	fclaw_ghost_fill.h
	fclaw_corner_neighbors.h
	fclaw_edge_neighbors.h
	fclaw_face_neighbors.h
	fclaw_map.h
	fclaw_timeinterp.h
	fclaw_regrid.h
	fclaw_map_brick.h
	fclaw_partition.h
	fclaw_exchange.h
	fclaw_map_query.h
	fclaw_map_query_defs.h
	fclaw_diagnostics.h
	forestclaw2d.h
	fp_exception_glibc_extension.h
	fclaw2d_convenience.h
	fclaw2d_defs.h
  fclaw2d_file.h
  fclaw2d_wrap.h
  fclaw2d_to_3d.h
  forestclaw3d.h
  fclaw3d_convenience.h
  fclaw3d_defs.h
  fclaw3d_file.h
  fclaw3d_wrap.h
  TYPE INCLUDE
)

install(TARGETS forestclaw EXPORT ${PROJECT_NAME}-targets)

if(BUILD_TESTING)
  add_executable(forestclaw.TEST
      fclaw_gauges.h.TEST.cpp
      fclaw_packing.h.TEST.cpp
      fclaw_pointer_map.h.TEST.cpp
      fclaw_elliptic_solver.h.TEST.cpp
      fclaw_diagnostics.h.TEST.cpp
      fclaw_global.h.TEST.cpp
      fclaw_options.h.TEST.cpp
      fclaw_patch.h.TEST.cpp
      fclaw_vtable.h.TEST.cpp
  )

  target_link_libraries(forestclaw.TEST testutils forestclaw)
  register_unit_tests(forestclaw.TEST)
endif(BUILD_TESTING)
