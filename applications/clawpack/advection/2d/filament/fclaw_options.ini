[user]
     # Mappings : 
     # 0 : Use [ax,bx]x[ay,by]
     # 1 : Use brick domain and parameters (mi,mj)
     # 2 : Five-patch square
     example = 0        # no mapping

     claw-version = 4

[clawpatch]
     # Grid dimensions
     mx = 8               # mx_leaf
     my = 8               # my_leaf
     mbc = 2              # Number of ghost cells
     maux = 3

     # Clawpatch tagging criteria
     # value       : value exceeds threshold
     # minmax      : qmax-qmin exceeds threshold
     # difference  : difference (e.g. dqx = q(i+1,j)-q(i-1,j)) exceeds threshold
     # gradient    : gradient exceeds threshold
     # user        : User defined criteria
     refinement-criteria = difference

     # Equations and boundary conditions
     meqn = 1             # Number of equations


[Options]
# Regridding options
     minlevel = 3         # Minimum level
     maxlevel = 6         # Maximum levels of refinement

     regrid_interval = 1  # Regrid every 'regrid_interval' time steps.
     smooth-refine = T
     smooth-level = 5
     refine_threshold = 0.25

# Time stepping
     tfinal = 8.0          #

     use_fixed_dt = F      # Take a fixed time step
     initial_dt = 0.0025   # Initial time step for 'minlevel'
     max_cfl = 1.0         # maximum cfl
     desired_cfl = 0.9     # desired cfl

     outstyle = 1          # Controls how often output files are produced
     nout = 16
     nstep = 1             # Only used if outstyle is 3

     subcycle = T          # subcycle in time ( = T or F).

# Diagnostics and debugging
     conservation-check = F
     run-user-diagnostics = F
     trapfpe = F          # trap floating point exceptions
     mpi_debug = F
     report-timing = T
     report-timing-verbosity=wall

# File and console IO
     verbosity = production   # verbosity
     output = T

     # -----------
     # Tikz output 
     # -----------
     tikz-out = F
     tikz-figsize = 4 4     # Only used to compute DPI
     tikz-plot-prefix = 'plot'
     tikz-plot-suffix = 'png'

# mapping options
     manifold = F

     ax = 0
     bx = 2
     ay = 0
     by = 2


[clawpack46]
     order  = 2 2         # normal and transverse order
     mcapa = 0            # mcapa
     src_term = 0         # src_term

     mwaves = 1           # mwaves
     mthlim = 3           # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F


[clawpack5]
     order  = 2 2         # normal and transverse order
     mcapa = 0            # mcapa
     src_term = 0         # src_term

     mwaves = 1           # mwaves
     mthlim = 3           # mthlim (is a vector in general, with 'mwaves' entries)
     mthbc = 1 1 1 1      # mthbc(1) (left edge), etc.

     # output
     ascii-out = T
     vtk-out = F
     
